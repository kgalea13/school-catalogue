class School {
  constructor(name, numberOfStudents, level){
    this._name = name;
    this._numberOfStudents = numberOfStudents;
    this._level = level;
    
  } 

  get name(){
    return this._name;
  }

  get level(){
    return this._level;
  }

  get numberOfStudents(){
    return this._numberOfStudents;
  }
  
  quickFacts(){
    console.log(`${this.name} educates ${this.numberOfStudents} students at the ${this.level} school level.`)
  }

  static pickSubstituteTeacher(substituteTeachers){
    let subIndex = Math.floor(Math.random() * substituteTeachers.length);
    return substituteTeachers[subIndex];
  }

 set numberOfStudents(value){
    if(typeof value === number){
     this._numberOfStudents = value ;
    }else{
      console.log('Invalid input: numberOfStudents must be set to a Number.');
    }
  }
} 
  /* set numberOfStudents(value){
    if(value.isNan()){
    console.log('Invalid input: numberOfStudents must be set to a Number.');;
    }else{
      newNumberOfStudents = this.numberOfStudents;
    }
  }
} */

class PrimarySchool extends School{
  constructor(name, numberOfStudents, pickupPolicy){
    super(name, numberOfStudents, 'primary');
    this._pickupPolicy = pickupPolicy;
  }

  get pickupPolicy(){
    return this._pickupPolicy;
  }
}

class HighSchool extends School{
  constructor(name, numberOfStudents, sportsTeams){
    super(name, numberOfStudents, 'high');
    this._sportsTeams = sportsTeams
  }

  get sportsTeams(){
    console.log(this.sportsTeams);
  }
}

const lorraineHansbury = new PrimarySchool('Lorraine Hansbury', 514 , 'Students must be picked up by a parent, guardian, or a family member over the age of 13.')

console.log(lorraineHansbury);
console.log(School.pickSubstituteTeacher(['Jamal Crawford', 'Lou Williams', 'J. R. Smith', 'James Harden', 'Jason Terry', 'Manu Ginobli']));

const alSmith = new HighSchool('Al E. Smith', 415, ['Baseball', 'Basketball', 'Volleyball', 'Track and Field']);

console.log(alSmith);


